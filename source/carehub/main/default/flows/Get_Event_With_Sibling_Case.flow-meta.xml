<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>AssignEventwithSiblingCase</name>
        <label>Assign Event with Sibling Case</label>
        <locationX>264</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>eventWithSiblingCase</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetEventWithSiblingCaseLoop</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>CheckSiblingCase</name>
        <label>Check Sibling Case</label>
        <locationX>396</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>GetEventWithSiblingCaseLoop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Not Sibling Case</defaultConnectorLabel>
        <rules>
            <name>IsSiblingCase</name>
            <conditionLogic>1 AND ((2 AND 3) OR (4 AND 5) OR (6 AND 7) OR (10 AND 11)) AND (8 OR 9)</conditionLogic>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>caseRecord.Event__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.Contact.PostalCodeInfo__r.City__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>caseRecord.Contact.PostalCodeInfo__r.City__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>groupingRegion</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>City</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.Contact.PostalCodeInfo__r.State__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>caseRecord.Contact.PostalCodeInfo__r.State__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>groupingRegion</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>State</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.Contact.PostalCodeInfo__r.CountryCode__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>caseRecord.Contact.PostalCodeInfo__r.CountryCode__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>groupingRegion</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Country</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.Parent.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GroupingCase</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetEventWithSiblingCaseLoop.Case__r.Contact.PostalCodeInfo__r.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>caseRecord.Contact.PostalCodeInfo__r.Name</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>groupingRegion</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PostalCode</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignEventwithSiblingCase</targetReference>
            </connector>
            <label>Is Sibling Case</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Syntilio CareHub Get Event With Sibling Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Syntilio CareHub Get Event With Sibling Case</label>
    <loops>
        <name>GetEventWithSiblingCaseLoop</name>
        <label>Get Event With Sibling Case Loop</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <collectionReference>syntilioEvents</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CheckSiblingCase</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetEventWithSiblingCaseLoop</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>caseRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>eventWithSiblingCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>SyntilioEvent__c</objectType>
    </variables>
    <variables>
        <name>groupingRegion</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>syntilioEvents</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>SyntilioEvent__c</objectType>
    </variables>
</Flow>
