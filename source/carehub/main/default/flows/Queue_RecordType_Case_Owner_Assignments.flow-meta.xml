<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>Assign_Case_Owner</name>
        <label>Assign Case Owner</label>
        <locationX>2024</locationX>
        <locationY>1030</locationY>
        <assignmentItems>
            <assignToReference>caseOwnerQueueVariableOutput</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>queueInternalSFId</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Case_Owner_0</name>
        <label>Assign Case Owner</label>
        <locationX>2021</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>caseOwnerQueueVariableOutput</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>waitingQueueuInternalSFId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>nextQueueIdAfterWaiting</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>queueInternalSFId</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Check_If_Main_Group_Found</name>
        <label>Check If Main Group Found</label>
        <locationX>470</locationX>
        <locationY>609</locationY>
        <defaultConnector>
            <targetReference>Get_Main_Group_From_Association</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Main Group Not Found</defaultConnectorLabel>
        <rules>
            <name>Main_Group_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Main_Group_From_Association.MainGroup__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Main_Group</targetReference>
            </connector>
            <label>Main Group Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Group_Association</name>
        <label>Found Group Association</label>
        <locationX>736</locationX>
        <locationY>827</locationY>
        <defaultConnector>
            <targetReference>Medical_or_Technical_Event</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Found Group False</defaultConnectorLabel>
        <rules>
            <name>Found_Group_Association_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Client_Group_Association</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Main_Group_From_Association</targetReference>
            </connector>
            <label>Found Group Association True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Queue_Name_Similar_Group_Name</name>
        <label>Found Queue Name Similar Group Name</label>
        <locationX>877</locationX>
        <locationY>52</locationY>
        <defaultConnector>
            <targetReference>Medical_or_Technical_Event</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Found Queue Name Similar Group Name Falee</defaultConnectorLabel>
        <rules>
            <name>Found_Queue_Name_Similar_Group_Name_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Name_Similar_Group_Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Default_Record_Type</targetReference>
            </connector>
            <label>Found Queue Name Similar Group Name True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Medical_or_Technical_Event</name>
        <label>Medical or Technical Event</label>
        <locationX>862</locationX>
        <locationY>1070</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Medical</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>eventConfigurationRecord.Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Medical</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Medical_Queue_Id</targetReference>
            </connector>
            <label>Medical</label>
        </rules>
        <rules>
            <name>Technical</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>eventConfigurationRecord.Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Technical</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Technical_Queue_Id</targetReference>
            </connector>
            <label>Technical</label>
        </rules>
    </decisions>
    <decisions>
        <name>Medical_or_Technical_Event_0</name>
        <label>Medical or Technical Event</label>
        <locationX>1720</locationX>
        <locationY>1048</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>MedicalWithoutWaitingMinutes_0</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>eventConfigurationRecord.Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Medical</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_Owner</targetReference>
            </connector>
            <label>Medical Without Waiting Minutes</label>
        </rules>
        <rules>
            <name>TechnicalWithoutWaitingMinutes_0</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>eventConfigurationRecord.Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Technical</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_Owner</targetReference>
            </connector>
            <label>Technical Without Waiting Minutes</label>
        </rules>
        <rules>
            <name>MedicalWithWaitingMinutes_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>eventConfigurationRecord.Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Medical</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_Owner_0</targetReference>
            </connector>
            <label>Medical With Waiting Minutes</label>
        </rules>
        <rules>
            <name>TechnicalWithWaitingMinutes_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>eventConfigurationRecord.Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Technical</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>eventConfigurationRecord.WaitingMinutes__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_Owner_0</targetReference>
            </connector>
            <label>Technical With Waiting Minutes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>queueIdsFormulaFromAppConfigurationOrInternalSFIds</name>
        <dataType>String</dataType>
        <expression>IF({!eventConfigurationRecord.WaitingMinutes__c}&gt;0 &amp;&amp; NOT ISBLANK({!appConfigurationMetadataRecord.WaitingQueueId__c}), {!appConfigurationMetadataRecord.WaitingQueueId__c} , IF({!eventConfigurationRecord.WaitingMinutes__c}&gt;0 &amp;&amp; ISBLANK( {!appConfigurationMetadataRecord.WaitingQueueId__c}), {!waitingQueueuInternalSFId}, IF( ISPICKVAL({!eventConfigurationRecord.Category__c}, &quot;Medical&quot;) &amp;&amp; NOT ISBLANK({!appConfigurationMetadataRecord.MedicalQueueId__c}), {!appConfigurationMetadataRecord.MedicalQueueId__c}, 
IF( ISPICKVAL({!eventConfigurationRecord.Category__c}, &quot;Medical&quot;) &amp;&amp; ISBLANK( {!appConfigurationMetadataRecord.MedicalQueueId__c}), {!queueInternalSFId}, IF( ISPICKVAL({!eventConfigurationRecord.Category__c}, &quot;Technical&quot;) &amp;&amp; NOT ISBLANK({!appConfigurationMetadataRecord.TechnicalQueueId__c}), {!appConfigurationMetadataRecord.TechnicalQueueId__c} , IF( ISPICKVAL({!eventConfigurationRecord.Category__c}, &quot;Technical&quot;)  &amp;&amp; ISBLANK( {!appConfigurationMetadataRecord.TechnicalQueueId__c}), {!queueInternalSFId}, null))))))</expression>
    </formulas>
    <interviewLabel>Syntilio CareHub Queue, RecordType, Case Owner Assignments {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Syntilio CareHub Queue - RecordType - Case Owner Assignments</label>
    <loops>
        <name>Get_Main_Group_From_Association</name>
        <label>Get Main Group From Association</label>
        <locationX>744</locationX>
        <locationY>610</locationY>
        <collectionReference>Get_Client_Group_Association</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_If_Main_Group_Found</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_to_get_First_Record_Only</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_to_get_First_Record_Only</name>
        <label>Loop to get First Record Only</label>
        <locationX>741</locationX>
        <locationY>391</locationY>
        <collectionReference>Get_Client_Group_Association</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Group_Name</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Client_Group_Association</name>
        <label>Get Client Group Association</label>
        <locationX>608</locationX>
        <locationY>1061</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Group_Association</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContactId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>contactInternalSFId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Default_Record_Type</name>
        <label>Get Default Record Type</label>
        <locationX>1497</locationX>
        <locationY>1046</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Medical_or_Technical_Event_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SyntilioDefault</stringValue>
            </value>
        </filters>
        <filters>
            <field>NamespacePrefix</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Syntilio</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputAssignments>
            <assignToReference>recordTypeInternalSFId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Name</name>
        <label>Get Group Name</label>
        <locationX>742</locationX>
        <locationY>205</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Queue_Name_Similar_Group_Name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_to_get_First_Record_Only.GroupId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Main_Group</name>
        <label>Get Main Group</label>
        <locationX>480</locationX>
        <locationY>51</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Queue_Name_Similar_Group_Name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Main_Group_From_Association.GroupId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Medical_Queue_Id</name>
        <label>Get Medical Queue Id</label>
        <locationX>1138</locationX>
        <locationY>977</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Default_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Medical</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>queueInternalSFId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Medical_Queue_Id_0</name>
        <label>Get Medical Queue Id</label>
        <locationX>444</locationX>
        <locationY>1062</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Client_Group_Association</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Waiting</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>waitingQueueuInternalSFId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Name_Similar_Group_Name</name>
        <label>Get Queue Name Similar Group Name</label>
        <locationX>742</locationX>
        <locationY>50</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Queue_Name_Similar_Group_Name</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) OR (4 OR 5)</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Group_Name.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Group_Name.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Main_Group.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Main_Group.Name</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>queueInternalSFId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>Get_Technical_Queue_Id</name>
        <label>Get Technical Queue Id</label>
        <locationX>1145</locationX>
        <locationY>1144</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Default_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Technical</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>queueInternalSFId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <start>
        <locationX>44</locationX>
        <locationY>1043</locationY>
        <connector>
            <targetReference>Get_Medical_Queue_Id_0</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>appConfigurationMetadataRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>CareHubAppConfiguration__mdt</objectType>
    </variables>
    <variables>
        <name>caseOwnerQueueVariableOutput</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>clientGroupMembersSize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>contactInternalSFId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItem_Get_Single_Group_Record</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember__c</objectType>
    </variables>
    <variables>
        <name>eventConfigurationRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>EventConfiguration__c</objectType>
    </variables>
    <variables>
        <name>mainGroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>nextQueueIdAfterWaiting</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>queueInternalSFId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>recordTypeInternalSFId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>waitingQueueuInternalSFId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
